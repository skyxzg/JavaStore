package com.taobao.yiwei.algorithm;

/**
 * 对于给定的一个二进制串，可以对其翻转若干次，规则如下：
 * 可以选定任一位置对其进行翻转，同时它左边和右边的相邻的1个位置也进行翻转，翻转是指1变成0，0变成1。
 * 例如：11011，我们选择在第三个位置翻转，则第二个位置和第四个位置也跟着翻转，所以翻转后变为10101。
 * 若翻转位置在最左侧，则只有右侧相邻位置跟着翻转，同样的，若翻转位置在最右侧，则只有左侧相邻位置跟着翻转。
 *
 * 现在，给定一个二进制串，如何翻转才能使得这个二进制串的所有位置都是0，若可以，请找到最少操作次数，若不可以，输出NO
 *
 * 10101
 *
 * 1001110
 *
 * 101010101
 *
 * 111001
 *
 * 10000
 *
 */
public class BinaryInversion {

    public static void main(String[] args) {

    }

    private static int compute() {
        return 0;
    }
}
